{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","React","memo","todos","map","username","newTodos","userId","usersFromServer","find","App","useState","setTodos","setUser","setTitle","invalidUser","setInvalidUser","invalidTitle","setInvalidTitle","action","method","onSubmit","event","preventDefault","invalidValues","titleOnlyWithLetters","replace","findUser","newId","Math","max","type","placeholder","value","onChange","target","disabled","i","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4c51bdb.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\n\nimport { Todo } from '../../types/Todo';\n\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\n\nimport { TodoInfo } from '../TodoInfo';\n\nimport { Todo } from '../../types/Todo';\n\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = React.memo(\n  ({ todos }) => {\n    return (\n      <ul className=\"TodoList\">\n        {todos.map(todo => (\n          <li key={todo.id}>\n            <TodoInfo todo={todo} />\n          </li>\n        ))}\n      </ul>\n    );\n  },\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\n\nimport { TodoList } from './components/TodoList';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport './App.scss';\n\nconst getUser = (userId: number): User | null => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n};\n\nconst newTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(newTodos);\n  const [user, setUser] = useState('0');\n  const [title, setTitle] = useState('');\n\n  const [invalidUser, setInvalidUser] = useState(false);\n  const [invalidTitle, setInvalidTitle] = useState(false);\n\n  const handleChangeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setUser(value);\n    setInvalidUser(false);\n  };\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setTitle(value);\n    setInvalidTitle(false);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setUser('0');\n  };\n\n  const handleSubmitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    let invalidValues = false;\n    const titleOnlyWithLetters = title.replace(/[0-9]/g, '');\n\n    if (!titleOnlyWithLetters) {\n      setInvalidTitle(true);\n      invalidValues = true;\n    }\n\n    if (user === '0') {\n      setInvalidUser(true);\n      invalidValues = true;\n    }\n\n    if (invalidValues) {\n      return;\n    }\n\n    const findUser = usersFromServer.find(({ id }) => id === +user);\n    const newId = Math.max(...todos.map(({ id }) => id)) + 1;\n\n    if (findUser) {\n      setTodos([\n        ...todos,\n        {\n          id: newId,\n          title: titleOnlyWithLetters,\n          completed: false,\n          userId: findUser.id,\n          user: findUser,\n        },\n      ]);\n    }\n\n    resetForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmitForm}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleChangeTitle}\n            />\n          </label>\n\n          {invalidTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              value={user}\n              onChange={handleChangeUser}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(({ name }, i) => (\n                <option value={i + 1} key={name}>\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {invalidUser && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}